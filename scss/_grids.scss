$grid-columns: 12;
$grid-gap: 20px;
$grid-gap--md: 20px;
$grid-gap--lg: 20px;
$max-width: 1920px;
// IE fallback for CSS Grid
@mixin gridFallback($gap: null) {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    @if ($gap==null) {
        $gap: $grid-gap;
    }
    margin: 0;
    @include breakpoint(lg) {
        margin: calc(#{$gap + 0.625} * -1) 0 0 calc(#{$gap + 0.625} * -1);
    }
    @include breakpoint(xl) {
        margin: calc(#{$gap + 1.55} * -1) 0 0 calc(#{$gap + 1.55} * -1);
    }
    > * {
        @include breakpoint(lg) {
            padding: 0 0 0 #{$gap + 0.625};
        }
        @include breakpoint(xl) {
            padding: 0 0 0 #{$gap + 1.55};
        }
        background-clip: content-box;
    }
    .col--middleZword {
        padding: 0 #{$gap};
        @include breakpoint(lg) {
            padding: 0 #{$gap + 0.625};
        }
        @include breakpoint(xl) {
            padding: 0 #{$gap + 1.55};
        }
    }
    .col--middle {
        padding: 0 #{$gap};
        @include breakpoint(lg) {
            padding: 0 #{$gap + 0.625};
        }
        @include breakpoint(xl) {
            padding: 0 #{$gap + 1.55};
        }
        .col--half {
            &:nth-child(odd) {
                padding: 0 calc(#{$gap} / 2) 0 0;
            }
            &:nth-child(even) {
                padding: 0 0 0 calc(#{$gap} / 2);
            }
        }
    }
    @supports (grid-area: auto) {
        .col--middleZword {
            padding: 0;
        }
        .col--middle {
            padding: 0;
            .col--half {
                &:nth-child(odd) {
                    padding: 0;
                }
                &:nth-child(even) {
                    padding: 0;
                }
            }
        }
        margin: 0;
        > * {
            padding: 0;
            max-width: none !important;
        }
    }
}
@mixin gridPadding(
    $top: true,
    $right: true,
    $bottom: true,
    $left: true,
    $type: "padding"
) {
    #{$type}-top: $grid-gap;
    #{$type}-right: $grid-gap;
    #{$type}-bottom: $grid-gap;
    #{$type}-left: $grid-gap;
    @include breakpoint(lg) {
        #{$type}-top: $grid-gap--md;
        #{$type}-right: $grid-gap--md;
        #{$type}-bottom: $grid-gap--md;
        #{$type}-left: $grid-gap--md;
    }
    @include breakpoint(xl) {
        #{$type}-top: $grid-gap--lg;
        #{$type}-right: $grid-gap--lg;
        #{$type}-bottom: $grid-gap--lg;
        #{$type}-left: $grid-gap--lg;
    }
    $directions: (
        (top, $top),
        (right, $right),
        (bottom, $bottom),
        (left, $left)
    );
    @each $direction in $directions {
        $dir: nth($direction, 1);
        $val: nth($direction, 2);
        @if nth($direction, 2) !=true {
            #{$type}-#{$dir}: 0 !important;
            @if $val !=false {
                #{$type}-#{$dir}: #{$val} !important;
            }
        }
    }
}
@mixin gridMargin($top: true, $right: true, $bottom: true, $left: true) {
    @include gridPadding($top, $right, $bottom, $left, $type: "margin");
}



.col--full-width {
    //colonna al 100%, indipendentemente dalla griglia che la contiene
    @include column(12/12);
    grid-column: span 12; // text-align: left;
}
// layout 3 col HP
.grid--3col {
    @include gridFallback($grid-gap);
    @include grid();
    .col--1,
    .col--2,
    .col--3 {
        @include column(12/12);
        grid-column: span 12; // text-align: left;
        @include breakpoint(sm) {
            order: 1;
            @include column(4/12);
            grid-column: span 4;
        }
        @media only screen and (max-width: 767px) {
            .hideMobile {
                display: none;
            }
        }
    }
}
// layout 2 col
.grid--2col {
    @include gridFallback($grid-gap);
    @include grid();
    .col--1,
    .col--2 {
        @include column(12/12);
        grid-column: span 12; // text-align: left;
        @include breakpoint(sm) {
            order: 1;
            @include column(6/12);
            grid-column: span 6;
        }
    }
}
// middle col of grid 3 col
.grid--3col--middle {
    @include gridFallback($grid-gap);
    @include grid();
    .col--1,
    .col--3 {
        @include column(12/12);
        grid-column: span 12; // text-align: left;
        @include breakpoint(sm) {
            order: 1;
            @include column(3/12);
            grid-column: span 3;
        }
    }
    .col--middle {
        @include column(12/12);
        grid-column: span 12;
        @include breakpoint(sm) {
            order: 1;
            @include column(6/12);
            grid-column: span 6;
        }
        @include gridFallback($grid-gap--md);
        padding-top: $grid-gap--md;
        @supports (grid-area: auto) {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-column-gap: $grid-gap;
            padding-top: 0;
            @include breakpoint(lg) {
                grid-column-gap: ($grid-gap--md) / 2;
            }
            @include breakpoint(xl) {
                grid-column-gap: ($grid-gap--lg) / 2;
            }
        }
        .col--half {
            @include column(1/2);
            grid-column: span 1;
            @media only screen and (max-width: 30rem) {
                @include column(2/2);
                grid-column: span 2;
            }
        }
        .col--full {
            @include column(1);
            grid-column: span 2;
            width: 100%;
        }
    }
}
// layout 2 col with sidebar
.grid--sidebar {
    @include gridFallback($grid-gap);
    @include grid();
    .col--1 {
        @include column(12/12);
        grid-column: span 12;
        @include breakpoint(sm) {
            @include column(9/12);
            grid-column: span 9;
        }
        order: 1;
        .col--1--inner-grid {
            @include grid(12);
            @include breakpoint(sm) {
                @include grid(9);
                @include column(9/9);
                grid-column: span 9;
            }
            .col--1 {
                order: 0;
                @include breakpoint(sm) {
                    order: 0;
                    @include column(9/9);
                    grid-column: span 7;
                }
            }
            .col--2 {
                order: 1;
                @include column(12/12);
grid-column: span 12;
                @include breakpoint(sm) {
                    order: 1;
                    @include column(9/9);
                    grid-column: span 2;
                }
            }
        }
    }
    .col--sidebar {
        @include column(12/12);
        grid-column: span 12; // text-align: left;
        order: 0;
        @include breakpoint(sm) {
            @include column(3/12);
            grid-column: span 3;
        }
        @include breakpoint(md) {
            @include column(3/12);
            grid-column: span 3;
        }
    }
}
// layout internal 2 col
.grid--internal-2col {
    @include gridFallback($grid-gap);
    position: relative;
    @include grid();
    .col--1 {
        @include column(12/12);
        grid-column: span 12;
        width: 100%; // fix FF width
        @include breakpoint(md) {
            @include column(9/12);
            grid-column: span 9;
            display: block;
        }
    }
    .col--2 {
        @include column(12/12);
        grid-column: span 12;
        @include breakpoint(md) {
            display: inline-block;
            @include column(3/12);
            grid-column: span 3;
        }
    }
    // split col for layout internal 2 col in portrait view
    .splitCol {
        @include breakpoint(xsm) {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-column-gap: $grid-gap;
        }
        @include breakpoint(md) {
            display: inline-block;
        }
    }
}
// layout internal 3 col
.grid--internal-3col {
    @include gridFallback($grid-gap);
    position: relative;
    @include grid();
    .col--1 {
        @include column(12/12);
        grid-column: span 12;
        @include breakpoint(sm) {
            @include column(4/12);
            grid-column: span 4;
            display: block;
        }
        @include breakpoint(md) {
            @include column(3/12);
            grid-column: span 3;
            display: block;
        }
    }
    .col--2 {
        @include column(12/12);
        grid-column: span 12;
        width: 100%; // fix FF width
        @include breakpoint(sm) {
            @include column(8/12);
            grid-column: span 8;
        }
        @include breakpoint(md) {
            @include column(6/12);
            grid-column: span 6;
        }
    }
    .col--3 {
        @include column(12/12);
        grid-column: span 12;
        display: none; // @include breakpoint(sm) {
        //     @include column(4/12);
        //     grid-column: span 4;
        //     display: block;
        // }
        @include breakpoint(md) {
            @include column(3/12);
            grid-column: span 3;
            display: block;
        }
    }
}